# Game2048Core.jl

This is meant to be a minimalist implementation of the game 2048 aimed at performance but without
any visual components. To play the game of

The original intention of the repos is to use it to develop Reinforcement Learning algorithms with
2048.

## The environment

The board is represented by a `UInt64` value.

I did not use any RL environment framework. But here's how you can play with it.

```julia
using Game2048Core: initbboard, add_tile, move, left, right, up, down, randmove, simulate_bb
import Game2048Core as g

# obtain a new board with 2 tiles populated
board = initbboard()

# you can move left right up or down
old_board = board
new_board = move(board, g.left)

if board != old_board
    # this will add a new tile on the board
    board = add_tile(new_board)
end

# make a random move
randmove(board)

# simulate the game til the end using purely random moves
simulate_bb(board)
```

## Performance

```julia
using BenchmarkTools

b = initbboard()

@benchmark move($b, $left)
```

```julia
@benchmark move($b, $right)
```

```julia
@benchmark move($b, $up)
```

```julia
@benchmark move($b, $down)
```

```julia
@benchmark simulate_bb($board)
```

```julia
@benchmark simulate_bb()
```

```julia
@benchmark randmove($board)
```
